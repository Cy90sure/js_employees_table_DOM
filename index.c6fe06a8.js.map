{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAW,EAAM,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAExC,SAAS,EAAU,CAAS,EAAE,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAO,OAAQ,EAAA,CAAA,CAAA,UAAA,MAAA,CAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,CAC3C,EAAK,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EACE,IAEI,EAFA,EAAkB,EAAE,gBAAgB,CAAC,KAAK,CAAC,EAAU,CAAC,WAAW,CACjE,EAAkB,EAAE,gBAAgB,CAAC,KAAK,CAAC,EAAU,CAAC,WAAW,CAGrE,OAAQ,GACN,IAAK,OACH,EAAa,EAAgB,aAAa,CAAC,GAC3C,KACF,KAAK,SACH,EAAa,EAAkB,EAC/B,KACF,KAAK,QAGH,EAAa,AAFb,CAAA,EAAkB,WAAW,EAAgB,OAAO,CAAC,WAAY,IAAjE,EACA,CAAA,EAAkB,WAAW,EAAgB,OAAO,CAAC,WAAY,IAAjE,EAEA,KACF,SACE,EAAa,CAEjB,CAEA,OAAO,EAAQ,EAAa,CAAC,CAC/B,GAEA,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,WAAW,CAAC,E,EAC1C,CAEA,SAAS,EAAqB,CAAQ,CAAE,CAAK,CAAE,CAAI,EACjD,SAAS,aAAa,CAAC,GAAU,gBAAgB,CAAC,QAAS,SAAC,CAA5D,EACE,IAAM,EAAoB,SAAS,aAAa,CAAC,GAC3C,EAAmB,EAAkB,YAAY,CAAC,YAEpD,CAAC,GAAoB,AAAqB,UAArB,GAIvB,EAAU,EAAO,EAAM,CAAA,GACvB,EAAkB,YAAY,CAAC,YAAa,WAJ5C,EAAU,EAAO,GACjB,EAAkB,YAAY,CAAC,YAAa,QAKhD,EACF,CAEA,EAAqB,YAAa,EAAG,QACrC,EAAqB,gBAAiB,EAAG,QACzC,EAAqB,cAAe,EAAG,QACvC,EAAqB,WAAY,EAAG,UACpC,EAAqB,cAAe,EAAG,SAEvC,IAAM,EAAmB,SAAC,CAAA,CAAO,CAAA,CAAa,CAA9C,EACE,IAAM,EAAe,SAAS,aAAa,CAAC,OAE5C,EAAa,YAAY,CAAC,UAAW,gBACrC,EAAa,SAAS,CAAI,qBAAoC,MAAA,CAAhB,EAAM,YAAsB,MAAA,CAAZ,EAAY,QAC1E,EAAa,SAAS,CAAC,GAAG,CAAC,eAAgB,GAC3C,SAAS,IAAI,CAAC,MAAM,CAAC,GACrB,WAAW,WAAO,OAAA,EAAa,KAAK,CAAC,UAAU,CAAG,QAAW,EAAA,IAC/D,EAEA,SAAS,EAAW,CAAO,EACzB,IAAM,EAAO,SAAS,aAAa,CAAC,MAIpC,OAFA,EAAK,WAAW,CAAG,EAEZ,CACT,CAEA,IAAM,EAAS,SAAC,CAAA,CAAW,CAAA,CAAU,CAAA,CAAQ,CAAA,CAAK,CAAlD,EACE,IAAM,EAAM,SAAS,aAAa,CAAC,MAEnC,EAAI,MAAM,CACR,EAAW,GACX,EAAW,GACX,EAAW,GACX,EAAW,GACX,EAAW,IAEb,SAAS,aAAa,CAAC,SAAS,MAAM,CAAC,EACzC,EAEA,SAAS,cAAc,CAAC,cAAc,gBAAgB,CAAC,QAAS,SAAC,CAAjE,EACE,EAAE,cAAc,GAEhB,IAAM,EAAY,SAAS,aAAa,CAAC,iBAAiB,KAAK,CACzD,EAAW,SAAS,aAAa,CAAC,qBAAqB,KAAK,CAC5D,EAAS,SAAS,aAAa,CAAC,mBAAmB,KAAK,CACxD,EAAM,SAAS,aAAa,CAAC,gBAAgB,KAAK,CAClD,EACJ,IACA,OAAO,SAAS,aAAa,CAAC,mBAAmB,KAAK,EAAE,cAAc,CACpE,SAGJ,GAAI,EAAU,MAAM,CAAG,EAAG,CACxB,EACE,oBACA,wCACA,SAGF,MACF,CAAO,GAAI,EAAS,MAAM,CAAG,EAAG,CAC9B,EACE,wBACA,4CACA,SAGF,MACF,CAAO,GAAI,EAAM,IAAM,EAAM,GAAI,CAC/B,EACE,iBACA,sCACA,SAGF,MACF,CAEA,IAAM,EAAQ,SAAS,oBAAoB,CAAC,MAAM,MAAM,CAExD,EAAO,EAAW,EAAU,EAAQ,EAAK,GAErC,EAAQ,SAAS,oBAAoB,CAAC,MAAM,MAAM,EACpD,EAAiB,UAAW,wBAAyB,WACrD,SAAS,aAAa,CAAC,iBAAiB,KAAK,CAAG,GAChD,SAAS,aAAa,CAAC,qBAAqB,KAAK,CAAG,GACpD,SAAS,aAAa,CAAC,mBAAmB,KAAK,CAAG,QAClD,SAAS,aAAa,CAAC,gBAAgB,KAAK,CAAG,GAC/C,SAAS,aAAa,CAAC,mBAAmB,KAAK,CAAG,IAElD,EAAiB,QAAS,uBAAwB,QAEtD,GAEA,SAAS,gBAAgB,CAAC,YAAY,OAAO,CAAC,SAAC,CAA/C,EACE,EAAI,gBAAgB,CAAC,QAAS,WAC5B,SACG,gBAAgB,CAAC,YACjB,OAAO,CAAC,SAAC,CAFZ,EAEkB,OAAA,EAAE,SAAS,CAAC,MAAM,CAAC,S,GACrC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SACrB,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar tBody = document.querySelector(\"tbody\");\nvar rows = _to_consumable_array(tBody.querySelectorAll(\"tr\"));\nfunction sortTable(cellIndex) {\n    var type = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"text\", order = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;\n    rows.sort(function(a, b) {\n        var characteristicA = a.querySelectorAll(\"td\")[cellIndex].textContent;\n        var characteristicB = b.querySelectorAll(\"td\")[cellIndex].textContent;\n        var comparison;\n        switch(type){\n            case \"text\":\n                comparison = characteristicA.localeCompare(characteristicB);\n                break;\n            case \"number\":\n                comparison = characteristicA - characteristicB;\n                break;\n            case \"money\":\n                characteristicA = parseFloat(characteristicA.replace(/[^0-9.]/g, \"\"));\n                characteristicB = parseFloat(characteristicB.replace(/[^0-9.]/g, \"\"));\n                comparison = characteristicA - characteristicB;\n                break;\n            default:\n                comparison = 0;\n                break;\n        }\n        return order ? comparison : -comparison;\n    });\n    rows.forEach(function(row) {\n        return tBody.appendChild(row);\n    });\n}\nfunction addSortEventListener(selector, index, type) {\n    document.querySelector(selector).addEventListener(\"click\", function(e) {\n        var salarySortElement = document.querySelector(selector);\n        var currentDirection = salarySortElement.getAttribute(\"direction\");\n        if (!currentDirection || currentDirection === \"false\") {\n            sortTable(index, type);\n            salarySortElement.setAttribute(\"direction\", \"true\");\n        } else {\n            sortTable(index, type, false);\n            salarySortElement.setAttribute(\"direction\", \"false\");\n        }\n    });\n}\naddSortEventListener(\"#nameSort\", 0, \"text\");\naddSortEventListener(\"#positionSort\", 1, \"text\");\naddSortEventListener(\"#officeSort\", 2, \"text\");\naddSortEventListener(\"#ageSort\", 3, \"number\");\naddSortEventListener(\"#salarySort\", 4, \"money\");\nvar pushNotification = function(title, description, type) {\n    var notification = document.createElement(\"div\");\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notification.innerHTML = \"<h2 class='title'>\".concat(title, \"</h2><p>\").concat(description, \"</p>\");\n    notification.classList.add(\"notification\", type);\n    document.body.append(notification);\n    setTimeout(function() {\n        return notification.style.visibility = \"hidden\";\n    }, 2000);\n};\nfunction CreateCell(content) {\n    var cell = document.createElement(\"td\");\n    cell.textContent = content;\n    return cell;\n}\nvar addRow = function(namevalue, position, office, age, salary) {\n    var row = document.createElement(\"tr\");\n    row.append(CreateCell(namevalue), CreateCell(position), CreateCell(office), CreateCell(age), CreateCell(salary));\n    document.querySelector(\"tbody\").append(row);\n};\ndocument.getElementById(\"saveButton\").addEventListener(\"click\", function(e) {\n    e.preventDefault();\n    var namevalue = document.querySelector('[name=\"name\"]').value;\n    var position = document.querySelector('[name=\"position\"]').value;\n    var office = document.querySelector('[name=\"office\"]').value;\n    var age = document.querySelector('[name=\"age\"]').value;\n    var salary = \"$\" + Number(document.querySelector('[name=\"salary\"]').value).toLocaleString(\"en-US\");\n    if (namevalue.length < 4) {\n        pushNotification(\"Name is too short\", \"Name must contain more then 3 letters\", \"error\");\n        return;\n    } else if (position.length < 4) {\n        pushNotification(\"Position is too short\", \"Position must contain more then 3 letters\", \"error\");\n        return;\n    } else if (age < 18 || age > 90) {\n        pushNotification(\"Age is invalid\", \"Age value must be between 18 and 90\", \"error\");\n        return;\n    }\n    var rowsN = document.getElementsByTagName(\"tr\").length;\n    addRow(namevalue, position, office, age, salary);\n    if (rowsN < document.getElementsByTagName(\"tr\").length) {\n        pushNotification(\"Success\", \"Information was added\", \"success\");\n        document.querySelector('[name=\"name\"]').value = \"\";\n        document.querySelector('[name=\"position\"]').value = \"\";\n        document.querySelector('[name=\"office\"]').value = \"Tokyo\";\n        document.querySelector('[name=\"age\"]').value = \"\";\n        document.querySelector('[name=\"salary\"]').value = \"\";\n    } else pushNotification(\"Error\", \"Something went wrong\", \"error\");\n});\ndocument.querySelectorAll(\"tbody tr\").forEach(function(row) {\n    row.addEventListener(\"click\", function() {\n        document.querySelectorAll(\"tbody tr\").forEach(function(r) {\n            return r.classList.remove(\"active\");\n        });\n        this.classList.add(\"active\");\n    });\n});\n\n//# sourceMappingURL=index.c6fe06a8.js.map\n","'use strict';\n\nconst tBody = document.querySelector('tbody');\nconst rows = [...tBody.querySelectorAll('tr')];\n\nfunction sortTable(cellIndex, type = 'text', order = true) {\n  rows.sort((a, b) => {\n    let characteristicA = a.querySelectorAll('td')[cellIndex].textContent;\n    let characteristicB = b.querySelectorAll('td')[cellIndex].textContent;\n    let comparison;\n\n    switch (type) {\n      case 'text':\n        comparison = characteristicA.localeCompare(characteristicB);\n        break;\n      case 'number':\n        comparison = characteristicA - characteristicB;\n        break;\n      case 'money':\n        characteristicA = parseFloat(characteristicA.replace(/[^0-9.]/g, ''));\n        characteristicB = parseFloat(characteristicB.replace(/[^0-9.]/g, ''));\n        comparison = characteristicA - characteristicB;\n        break;\n      default:\n        comparison = 0;\n        break;\n    }\n\n    return order ? comparison : -comparison;\n  });\n\n  rows.forEach((row) => tBody.appendChild(row));\n}\n\nfunction addSortEventListener(selector, index, type) {\n  document.querySelector(selector).addEventListener('click', (e) => {\n    const salarySortElement = document.querySelector(selector);\n    const currentDirection = salarySortElement.getAttribute('direction');\n\n    if (!currentDirection || currentDirection === 'false') {\n      sortTable(index, type);\n      salarySortElement.setAttribute('direction', 'true');\n    } else {\n      sortTable(index, type, false);\n      salarySortElement.setAttribute('direction', 'false');\n    }\n  });\n}\n\naddSortEventListener('#nameSort', 0, 'text');\naddSortEventListener('#positionSort', 1, 'text');\naddSortEventListener('#officeSort', 2, 'text');\naddSortEventListener('#ageSort', 3, 'number');\naddSortEventListener('#salarySort', 4, 'money');\n\nconst pushNotification = (title, description, type) => {\n  const notification = document.createElement('div');\n\n  notification.setAttribute('data-qa', 'notification');\n  notification.innerHTML = `<h2 class='title'>${title}</h2><p>${description}</p>`;\n  notification.classList.add('notification', type);\n  document.body.append(notification);\n  setTimeout(() => (notification.style.visibility = 'hidden'), 2000);\n};\n\nfunction CreateCell(content) {\n  const cell = document.createElement('td');\n\n  cell.textContent = content;\n\n  return cell;\n}\n\nconst addRow = (namevalue, position, office, age, salary) => {\n  const row = document.createElement('tr');\n\n  row.append(\n    CreateCell(namevalue),\n    CreateCell(position),\n    CreateCell(office),\n    CreateCell(age),\n    CreateCell(salary),\n  );\n  document.querySelector('tbody').append(row);\n};\n\ndocument.getElementById('saveButton').addEventListener('click', (e) => {\n  e.preventDefault();\n\n  const namevalue = document.querySelector('[name=\"name\"]').value;\n  const position = document.querySelector('[name=\"position\"]').value;\n  const office = document.querySelector('[name=\"office\"]').value;\n  const age = document.querySelector('[name=\"age\"]').value;\n  const salary =\n    '$' +\n    Number(document.querySelector('[name=\"salary\"]').value).toLocaleString(\n      'en-US',\n    );\n\n  if (namevalue.length < 4) {\n    pushNotification(\n      'Name is too short',\n      'Name must contain more then 3 letters',\n      'error',\n    );\n\n    return;\n  } else if (position.length < 4) {\n    pushNotification(\n      'Position is too short',\n      'Position must contain more then 3 letters',\n      'error',\n    );\n\n    return;\n  } else if (age < 18 || age > 90) {\n    pushNotification(\n      'Age is invalid',\n      'Age value must be between 18 and 90',\n      'error',\n    );\n\n    return;\n  }\n\n  const rowsN = document.getElementsByTagName('tr').length;\n\n  addRow(namevalue, position, office, age, salary);\n\n  if (rowsN < document.getElementsByTagName('tr').length) {\n    pushNotification('Success', 'Information was added', 'success');\n    document.querySelector('[name=\"name\"]').value = '';\n    document.querySelector('[name=\"position\"]').value = '';\n    document.querySelector('[name=\"office\"]').value = 'Tokyo';\n    document.querySelector('[name=\"age\"]').value = '';\n    document.querySelector('[name=\"salary\"]').value = '';\n  } else {\n    pushNotification('Error', 'Something went wrong', 'error');\n  }\n});\n\ndocument.querySelectorAll('tbody tr').forEach((row) => {\n  row.addEventListener('click', function () {\n    document\n      .querySelectorAll('tbody tr')\n      .forEach((r) => r.classList.remove('active'));\n    this.classList.add('active');\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","tBody","document","querySelector","rows","_array_without_holes","isArray","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sortTable","cellIndex","type","arguments","order","sort","a","b","comparison","characteristicA","textContent","characteristicB","localeCompare","parseFloat","replace","forEach","row","appendChild","addSortEventListener","selector","index","addEventListener","e","salarySortElement","currentDirection","getAttribute","setAttribute","pushNotification","title","description","notification","createElement","innerHTML","concat","classList","add","body","append","setTimeout","style","visibility","CreateCell","content","cell","addRow","namevalue","position","office","age","salary","getElementById","preventDefault","value","Number","toLocaleString","rowsN","getElementsByTagName","r","remove"],"version":3,"file":"index.c6fe06a8.js.map"}